var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
import { BlockExplorerApi, LoadBalancerApi } from "../api";
import { globalDagNetwork } from "../global-dag-network";
export class DefaultDagWeb3Provider {
    constructor(netInfo) {
        this.loadBalancerApi = new LoadBalancerApi();
        this.blockExplorerApi = new BlockExplorerApi();
        if (netInfo) {
            this.setNetwork(netInfo);
        }
    }
    config(netInfo) {
        if (netInfo) {
            this.setNetwork(netInfo);
        }
        else {
            return this.connectedNetwork;
        }
    }
    setNetwork(netInfo) {
        if (this.connectedNetwork !== netInfo) {
            this.connectedNetwork = netInfo;
            if (!this.blockExplorerApi) {
                this.loadBalancerApi = new LoadBalancerApi();
                this.blockExplorerApi = new BlockExplorerApi();
            }
            this.blockExplorerApi.config().baseUrl(netInfo.beUrl);
            this.loadBalancerApi.config().baseUrl(netInfo.lbUrl);
        }
    }
    getBalance(address) {
        return __awaiter(this, void 0, void 0, function* () {
            const balObj = yield this.getLoadBalancerApi().getAddressBalance(address);
            return balObj.balance;
        });
    }
    getTransactionCount(address) {
        return __awaiter(this, void 0, void 0, function* () {
            const balObj = yield this.getLoadBalancerApi().getAddressLastAcceptedTransactionRef(address);
            return balObj.ordinal;
        });
    }
    getTransactionHistory(address, limit = 100) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.getBlockExplorerApi().getTransactionsByAddress(address, limit);
        });
    }
    getTokenTransactionHistory(address, limit = 100) {
        return __awaiter(this, void 0, void 0, function* () {
            return [];
        });
    }
    getTokenAddressBalances(addresses, tokenContractAddress) {
        return __awaiter(this, void 0, void 0, function* () {
            return {};
        });
    }
    getLoadBalancerApi() {
        return this.loadBalancerApi || globalDagNetwork.loadBalancerApi;
    }
    getBlockExplorerApi() {
        return this.blockExplorerApi || globalDagNetwork.blockExplorerApi;
    }
}
//# sourceMappingURL=default-dag-web3-provider.js.map