var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
import { BlockExplorerV2Api } from './api/v2/block-explorer-api';
import { MetagraphTokenL0Api } from "./api/metagraph-token/l0-api";
import { MetagraphTokenL1Api } from "./api/metagraph-token/l1-api";
class MetagraphTokenNetwork {
    constructor(netInfo) {
        this.connectedNetwork = netInfo;
        this.l0Api = new MetagraphTokenL0Api(netInfo.l0Url);
        this.l1Api = new MetagraphTokenL1Api(netInfo.l1Url);
        this.beApi = new BlockExplorerV2Api(netInfo.beUrl);
    }
    getNetwork() {
        return this.connectedNetwork;
    }
    getAddressBalance(address) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.l0Api.getAddressBalance(address);
        });
    }
    getAddressLastAcceptedTransactionRef(address) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.l1Api.getAddressLastAcceptedTransactionRef(address);
        });
    }
    getPendingTransaction(hash) {
        return __awaiter(this, void 0, void 0, function* () {
            let pendingTransaction = null;
            try {
                pendingTransaction = yield this.l1Api.getPendingTransaction(hash);
            }
            catch (e) {
                // NOOP 404
            }
            return pendingTransaction;
        });
    }
    getTransactionsByAddress(address, limit, searchAfter) {
        return __awaiter(this, void 0, void 0, function* () {
            let response = null;
            try {
                response = yield this.beApi.getCurrencyTransactionsByAddress(this.connectedNetwork.metagraphId, address, limit, searchAfter);
            }
            catch (e) {
                // NOOP 404
            }
            return response ? response.data : null;
        });
    }
    getTransaction(hash) {
        return __awaiter(this, void 0, void 0, function* () {
            let response = null;
            try {
                response = yield this.beApi.getCurrencyTransaction(this.connectedNetwork.metagraphId, hash);
            }
            catch (e) {
                // NOOP 404
            }
            return response ? response.data : null;
        });
    }
    postTransaction(tx) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = (yield this.l1Api.postTransaction(tx));
            // Support data/meta format and object return format
            return response.data ? response.data.hash : response.hash;
        });
    }
    getLatestSnapshot() {
        return __awaiter(this, void 0, void 0, function* () {
            const response = (yield this.beApi.getLatestCurrencySnapshot(this.connectedNetwork.metagraphId));
            return response.data;
        });
    }
}
export { MetagraphTokenNetwork };
//# sourceMappingURL=metagraph-token-network.js.map